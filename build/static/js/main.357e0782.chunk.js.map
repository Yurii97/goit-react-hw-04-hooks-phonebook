{"version":3,"sources":["components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","App.js","index.js"],"names":["FilterInput","styled","label","Filter","filter","onChangeFilter","type","name","value","onChange","pattern","title","ButtonStyled","button","Contact","id","number","deleteContact","onClick","ListStyled","ul","ContactList","contacts","contact","toLowerCase","includes","map","FormStyled","form","ContactForm","state","handleChange","e","target","setState","submitForm","preventDefault","newContact","nanoid","props","addNewContact","onSubmit","this","required","Component","App","some","toast","error","prevState","success","idBtn","localStorage","getItem","parseContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.357e0782.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const FilterInput = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 250px;\r\n`;\r\n","import { FilterInput } from './Filter.styled';\r\n\r\nexport default function Filter({ filter, onChangeFilter }) {\r\n  return (\r\n    <>\r\n      <FilterInput>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={onChangeFilter}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        />\r\n      </FilterInput>\r\n    </>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ButtonStyled = styled.button`\r\n  margin-left: 25px;\r\n  :hover,\r\n  :focus {\r\n    background-color: blue;\r\n    color: white;\r\n  }\r\n`;\r\n","import { ButtonStyled } from './Contact.styled';\r\n\r\nexport default function Contact({ id, name, number, deleteContact }) {\r\n  return (\r\n    <>\r\n      <span>\r\n        {name} : {number}\r\n      </span>\r\n      <ButtonStyled type=\"button\" onClick={() => deleteContact(id)}>\r\n        Delete\r\n      </ButtonStyled>\r\n    </>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ListStyled = styled.ul`\r\n  & li {\r\n    margin-top: 7px;\r\n  }\r\n`;\r\n","import Contact from '../Contact/Contact';\r\nimport { ListStyled } from './ContactList.styled';\r\n\r\nexport default function ContactList({ contacts, filter, deleteContact }) {\r\n  return (\r\n    <>\r\n      <section>\r\n        <ListStyled>\r\n          {contacts\r\n            .filter(contact =>\r\n              contact.name.toLowerCase().includes(filter.toLowerCase())\r\n            )\r\n            .map(({ id, name, number }) => (\r\n              <li key={id}>\r\n                <Contact\r\n                  id={id}\r\n                  name={name}\r\n                  number={number}\r\n                  deleteContact={deleteContact}\r\n                />\r\n              </li>\r\n            ))}\r\n        </ListStyled>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const FormStyled = styled.form`\r\n  /* display: flex;\r\n  flex-direction: column; */\r\n  padding: 20px;\r\n  width: 300px;\r\n  border: 1px solid black;\r\n\r\n  & label {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 20px;\r\n  }\r\n  & button {\r\n    margin-top: 20px;\r\n    :hover,\r\n    :focus {\r\n      background-color: blue;\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport { FormStyled } from './ContactForm.styled';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitForm = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const newContact = {\r\n      id: nanoid(),\r\n      name,\r\n      number,\r\n    };\r\n    // console.log(this.props);\r\n    this.props.addNewContact(newContact);\r\n\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <FormStyled onSubmit={this.submitForm}>\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={this.handleChange}\r\n              value={this.state.name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              onChange={this.handleChange}\r\n              value={this.state.number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </FormStyled>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parseContacts = JSON.parse(contacts);\r\n    if (parseContacts) {\r\n      this.setState({ contacts: parseContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addNewContact = newContact => {\r\n    if (\r\n      this.state.contacts.some(\r\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\r\n      )\r\n    ) {\r\n      toast.error('contact with such name already exists');\r\n      return;\r\n    }\r\n    this.setState(prevState => ({\r\n      contacts: [newContact, ...prevState.contacts],\r\n    }));\r\n    toast.success('contact added');\r\n  };\r\n\r\n  deleteContact = idBtn => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== idBtn),\r\n    }));\r\n    toast.success('delete is complete');\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    return (\r\n      <>\r\n        <Toaster />\r\n        <h1>Phonebook</h1>\r\n        <ContactForm addNewContact={this.addNewContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter filter={filter} onChangeFilter={this.handleChange} />\r\n        <ContactList\r\n          contacts={contacts}\r\n          filter={filter}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}