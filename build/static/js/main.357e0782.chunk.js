(this["webpackJsonpgoit-react-hw-04-hooks-phonebook"]=this["webpackJsonpgoit-react-hw-04-hooks-phonebook"]||[]).push([[0],{20:function(t,e,n){},25:function(t,e,n){"use strict";n.r(e);var a,c,r=n(0),o=n.n(r),s=n(11),i=n.n(s),l=(n(20),n(4)),d=n(13),u=n(6),b=n(7),h=n(9),j=n(8),m=n(5),p=n(2),f=n(3),x=f.a.label(a||(a=Object(p.a)(["\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n"]))),O=n(1);function g(t){var e=t.filter,n=t.onChangeFilter;return Object(O.jsx)(O.Fragment,{children:Object(O.jsxs)(x,{children:["Find contacts by name",Object(O.jsx)("input",{type:"text",name:"filter",value:e,onChange:n,pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan"})]})})}var C,v=f.a.button(c||(c=Object(p.a)(["\n  margin-left: 25px;\n  :hover,\n  :focus {\n    background-color: blue;\n    color: white;\n  }\n"])));function y(t){var e=t.id,n=t.name,a=t.number,c=t.deleteContact;return Object(O.jsxs)(O.Fragment,{children:[Object(O.jsxs)("span",{children:[n," : ",a]}),Object(O.jsx)(v,{type:"button",onClick:function(){return c(e)},children:"Delete"})]})}var w=f.a.ul(C||(C=Object(p.a)(["\n  & li {\n    margin-top: 7px;\n  }\n"])));function k(t){var e=t.contacts,n=t.filter,a=t.deleteContact;return Object(O.jsx)(O.Fragment,{children:Object(O.jsx)("section",{children:Object(O.jsx)(w,{children:e.filter((function(t){return t.name.toLowerCase().includes(n.toLowerCase())})).map((function(t){var e=t.id,n=t.name,c=t.number;return Object(O.jsx)("li",{children:Object(O.jsx)(y,{id:e,name:n,number:c,deleteContact:a})},e)}))})})})}var A,F=n(14),S=f.a.form(A||(A=Object(p.a)(["\n  /* display: flex;\n  flex-direction: column; */\n  padding: 20px;\n  width: 300px;\n  border: 1px solid black;\n\n  & label {\n    display: flex;\n    flex-direction: column;\n    margin-top: 20px;\n  }\n  & button {\n    margin-top: 20px;\n    :hover,\n    :focus {\n      background-color: blue;\n      color: white;\n    }\n  }\n"]))),N=function(t){Object(h.a)(n,t);var e=Object(j.a)(n);function n(){var t;Object(u.a)(this,n);for(var a=arguments.length,c=new Array(a),r=0;r<a;r++)c[r]=arguments[r];return(t=e.call.apply(e,[this].concat(c))).state={name:"",number:""},t.handleChange=function(e){var n=e.target,a=n.name,c=n.value;t.setState(Object(l.a)({},a,c))},t.submitForm=function(e){e.preventDefault();var n=t.state,a=n.name,c=n.number,r={id:Object(F.a)(),name:a,number:c};t.props.addNewContact(r),t.setState({name:"",number:""})},t}return Object(b.a)(n,[{key:"render",value:function(){return Object(O.jsx)(O.Fragment,{children:Object(O.jsxs)(S,{onSubmit:this.submitForm,children:[Object(O.jsxs)("label",{children:["Name",Object(O.jsx)("input",{type:"text",name:"name",onChange:this.handleChange,value:this.state.name,pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0})]}),Object(O.jsxs)("label",{children:["Number",Object(O.jsx)("input",{type:"tel",name:"number",onChange:this.handleChange,value:this.state.number,pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0})]}),Object(O.jsx)("button",{type:"submit",children:"Add contact"})]})})}}]),n}(r.Component),z=function(t){Object(h.a)(n,t);var e=Object(j.a)(n);function n(){var t;Object(u.a)(this,n);for(var a=arguments.length,c=new Array(a),r=0;r<a;r++)c[r]=arguments[r];return(t=e.call.apply(e,[this].concat(c))).state={contacts:[],filter:""},t.addNewContact=function(e){t.state.contacts.some((function(t){return t.name.toLowerCase()===e.name.toLowerCase()}))?m.b.error("contact with such name already exists"):(t.setState((function(t){return{contacts:[e].concat(Object(d.a)(t.contacts))}})),m.b.success("contact added"))},t.deleteContact=function(e){t.setState((function(t){return{contacts:t.contacts.filter((function(t){return t.id!==e}))}})),m.b.success("delete is complete")},t.handleChange=function(e){var n=e.target,a=n.name,c=n.value;t.setState(Object(l.a)({},a,c))},t}return Object(b.a)(n,[{key:"componentDidMount",value:function(){var t=localStorage.getItem("contacts"),e=JSON.parse(t);e&&this.setState({contacts:e})}},{key:"componentDidUpdate",value:function(t,e){this.state.contacts!==e.contacts&&localStorage.setItem("contacts",JSON.stringify(this.state.contacts))}},{key:"render",value:function(){var t=this.state,e=t.contacts,n=t.filter;return Object(O.jsxs)(O.Fragment,{children:[Object(O.jsx)(m.a,{}),Object(O.jsx)("h1",{children:"Phonebook"}),Object(O.jsx)(N,{addNewContact:this.addNewContact}),Object(O.jsx)("h2",{children:"Contacts"}),Object(O.jsx)(g,{filter:n,onChangeFilter:this.handleChange}),Object(O.jsx)(k,{contacts:e,filter:n,deleteContact:this.deleteContact})]})}}]),n}(r.Component),J=z;i.a.render(Object(O.jsx)(o.a.StrictMode,{children:Object(O.jsx)(J,{})}),document.getElementById("root"))}},[[25,1,2]]]);
//# sourceMappingURL=main.357e0782.chunk.js.map